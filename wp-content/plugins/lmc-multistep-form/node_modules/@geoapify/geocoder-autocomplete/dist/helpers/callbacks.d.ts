export declare class Callbacks {
    changeCallbacks: ((selectedOption: any) => void)[];
    suggestionsChangeCallbacks: ((options: any[]) => void)[];
    inputCallbacks: ((input: string) => void)[];
    openCallbacks: ((opened: boolean) => void)[];
    closeCallbacks: ((opened: boolean) => void)[];
    requestStartCallbacks: ((query: string) => void)[];
    requestEndCallbacks: ((success: boolean, data?: any, error?: any) => void)[];
    addCallback(operation: 'select' | 'suggestions' | 'input' | 'close' | 'open' | 'request_start' | 'request_end', callback: (param: any) => void): void;
    removeCallback(operation: 'select' | 'suggestions' | 'input' | 'close' | 'open' | 'request_start' | 'request_end', callback?: (param: any) => any): void;
    notifyInputChange(currentValue: string): void;
    notifyChange(feature: any): void;
    notifySuggestions(features: any): void;
    notifyOpened(): void;
    notifyClosed(): void;
    notifyRequestStart(query: string): void;
    notifyRequestEnd(success: boolean, data?: any, error?: any): void;
    private getCallbacksByOperation;
    private setCallbacksByOperation;
}
